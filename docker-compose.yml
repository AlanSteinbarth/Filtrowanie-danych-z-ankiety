version: '3.8'

services:
  survey-filter:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        VCS_REF: ${VCS_REF:-$(git rev-parse --short HEAD)}
        VERSION: ${VERSION:-2.0.0}
    image: survey-data-filter:latest
    container_name: survey-data-filter
    ports:
      - "8501:8501"
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
    volumes:
      - ./data:/app/data:ro
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - survey-network

  # Optional: Redis for caching (future enhancement)
  redis:
    image: redis:7-alpine
    container_name: survey-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - survey-network
    profiles:
      - with-cache

  # Optional: PostgreSQL for data persistence (future enhancement)
  postgres:
    image: postgres:15-alpine
    container_name: survey-postgres
    environment:
      POSTGRES_DB: survey_data
      POSTGRES_USER: survey_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-survey_pass}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - survey-network
    profiles:
      - with-database

networks:
  survey-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local
